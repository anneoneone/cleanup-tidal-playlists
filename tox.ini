[tox]
minversion = 4.0
envlist = py{38,39,310,311,312}, lint, security, docs
isolated_build = true

[testenv]
description = Run tests with pytest
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
commands = pytest {posargs}
allowlist_externals = pytest

[testenv:lint]
description = Run linting tools
deps =
    black>=23.0.0
    isort>=5.12.0
    flake8>=6.0.0
    flake8-docstrings>=1.7.0
    flake8-bugbear>=23.0.0
    flake8-comprehensions>=3.10.0
    flake8-simplify>=0.19.0
    mypy>=1.0.0
commands =
    black --check --diff src/ tests/
    isort --check-only --diff src/ tests/
    flake8 src/ tests/
    mypy src/

[testenv:security]
description = Run security checks
deps =
    bandit>=1.7.0
    safety>=2.3.0
commands =
    bandit -r src/
    safety check

[testenv:format]
description = Run code formatters
deps =
    black>=23.0.0
    isort>=5.12.0
commands =
    black src/ tests/
    isort src/ tests/

[testenv:docs]
description = Build documentation
deps =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.2.0
    myst-parser>=0.18.0
commands =
    sphinx-build -b html docs docs/_build/html

[testenv:build]
description = Build package
deps =
    build>=0.10.0
    twine>=4.0.0
commands =
    python -m build
    python -m twine check dist/*

[testenv:coverage]
description = Run tests with coverage reporting
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    coverage[toml]>=7.0.0
commands =
    pytest --cov=src/tidal_cleanup --cov-report=html --cov-report=xml --cov-report=term-missing
    coverage html
    coverage xml

[testenv:integration]
description = Run integration tests
deps =
    pytest>=7.0.0
    pytest-integration>=0.2.0
commands =
    pytest tests/integration/ {posargs}

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311, lint, security
    3.12: py312
